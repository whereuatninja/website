extends layout

block content
    // Custom Slider CSS
    link(href='/css/bootstrap-slider.css', rel='stylesheet')
    link(href='/css/bootstrap-datepicker.css', rel='stylesheet')
    link(href='/css/pirate.css', rel='stylesheet')
    script(src='/scripts/bootstrap-slider.js')
    script(src='/scripts/bootstrap-datepicker.js')
    script(src='/scripts/pirate.js')
    .container-fluid
      .row
        .col-sm-3.col-md-2.sidebar
          ul.nav.nav-stacked
            li.nav-header(data-toggle='collapse', data-target='#ninjaList')
              h4
                span
                  | My Ninjas 
                  span.badge #{user.ninjas.length}
              ul#ninjaList.nav.nav-list.collapse
                if user.ninjas
                  each ninja in user.ninjas
                    li
                      a(href='/pirate/' + ninja.id) #{ninja.name}
                else
                  li
                    a(href='#') No Ninjas 
            li.nav-header(data-toggle='collapse', data-target='#pirateList')
              h4
                span
                  | My Pirates 
                  span.badge 3
              ul#pirateList.nav.nav-list.collapse
                li
                  a(href='#') Pirate1
                li
                  a(href='#') Pirate2
                li
                  a(href='#') Pirate3
        .col-sm-9.col-sm-offset-3.col-md-10.col-md-offset-2.main
          if !viewModel.locations
            h3 No locations found for&nbsp;
              span.name #{viewModel.ninja.name}!
          else
            h2.sub-header Find&nbsp;
              span.name #{viewModel.ninja.name}!
            #map
            if viewModel.locations
              h2.sub-header Time Range
              div.well
                button#button-datepicker.btn.btn-default.btn-lg(type='button', aria-label='Pick a Date') Pick a Date
                    span.glyphicon.glyphicon-calendar(aria-hidden='true', style='padding-left: .25em')
                button#button-filter.btn.btn-primary.btn-lg Filter
                  span#button-filter-loader.glyphicon.glyphicon-refresh.glyphicon-refresh-animate
                br
                b#slider-after-label After
                b#slider-timezone-label TimeZone
                b#slider-before-label Before
                br
                input#timeSlider(type='text')

            h2.sub-header Activities
            #whereubeen.table-responsive
            table#whereubeen.table.table-responsive.table-striped
              thead
                tr
                  td
                  th Time
                  th Message
              tbody
                each loc in viewModel.locations
                  if loc.message
                    tr
                      td
                        button.btn.btn-default Center on Map
                      -var time = new Date(loc.time).toUTCString();
                      td= time
                      td= loc.message
            div#activityLoader
              strong Loading Activities...
              span#activity-loader.glyphicon.glyphicon-refresh.glyphicon-refresh-animate
            if viewModel.locations
              script(src='//maps.googleapis.com/maps/api/js?key=AIzaSyCKJnJars0xRRUHCtbzBgTG7TWMQLk_rYc')
              script(type='text/javascript').
                var ninjaId = "#{viewModel.ninjaId}";
                $(document).ready(function(){
                  var dateSlider = new WhereUAtDateSlider.initialize({
                      sliderId: "#timeSlider",
                      minSliderTime: "#{viewModel.minSliderTime}",
                      maxSliderTime: "#{viewModel.maxSliderTime}",
                      beforeLabelId: "slider-before-label",
                      afterLabelId: "slider-after-label",
                      timeZoneLabelId: "slider-timezone-label"
                  });
                  var mapModule = MapModule.initialize(document.getElementById('map'), !{JSON.stringify(viewModel.locations)});
                  var locationLoader = LocationLoader.initialize();
                  var locationDatePicker = LocationDatePicker.initialize("#{viewModel.minSliderTime}", "#{viewModel.maxSliderTime}");
                });

